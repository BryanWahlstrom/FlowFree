<% provide(:title, "FlowFree") %>
<div class="row">
  <div class="span12">
    <h3>Site Description</h3>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia, quisquam, cumque excepturi vel ratione magnam saepe nobis fuga quae atque facere animi molestiae perspiciatis natus facilis consequuntur optio sapiente aperiam.Lorem ipsum dolor sit amet, consectetur adipisicing elit. Optio tempora expedita enim dolore quos veniam quo. Saepe, cupiditate, deserunt error praesentium totam suscipit voluptates at itaque incidunt laborum quae officia!</p>
  </div>
</div>
<div class="row">
  <div class="span10 offset1 map">
    <h1>Search for River Flows By State</h1>
    <%= image_tag('us_rivers_vector.png', class: "img") %>
  </div>
</div>
<div class="row">
  <div class="span4 offset4">
   <div id='state-drop-dwn'>
      <%= form_tag rivers_by_state_path do %>
        <%= select_tag :state, options_for_select(us_states), :prompt => 'Select A State' %>
        <%= submit_tag "Go!", :name => nil %>
      <% end %>
    </div>
    <%= form_tag rivers_by_name_path do %>
      <p>
        <%= text_field_tag :search, params[:search] %>
        <%= submit_tag "Search", :name => nil %>
      </p>
      <% end %>
  </div>
</div>

<!-- use jquery to select that particular DOM click evernt .target and then use javascript to generate the new url to redirect to new view. -->

<!-- STACK OVERFLOW ABOUT THE STATE DROPDOWN MENU..
http://stackoverflow.com/questions/5602169/rails-drop-down-menu-to-execute-actions-in-the-controller
If you don't mind using jQuery, this is what I would do:
Have a hash defined something like:

@urls = {"Create New USer..." => new_user_url, "Create new expense", => new_expense_path}

Then in the view have:

select_tag :create-model, options_for_select(@urls)

Then in application.js or something like that

$('#create-model').change(function() {
  window.location = $(this).find('option:selected').val();
});
I haven't tried it but it should work without too much editing.
 -->